#!/bin/sh
# Generates a small Makefile used in the root of the output
# directory, to allow make to be started from there.
# The Makefile also allow for more convenient build of external modules

# Usage
# $1 - Kernel src directory
# $2 - Output directory

arch=`basename "$2"`

test ! -r $2/Makefile -o -O $2/Makefile || exit 0
# Only overwrite automatically generated Makefiles
# (so we do not overwrite buildroot Makefile)
if test -e $2/Makefile && ! grep -q Automatically $2/Makefile
then
	exit 0
fi
echo "  GEN     $2/Makefile"

cat << EOF > $2/Makefile
# Automatically generated by $0: don't edit

lastword = \$(word \$(words \$(1)),\$(1))
makedir := \$(dir \$(call lastword,\$(MAKEFILE_LIST)))

MAKEARGS := -C $1
MAKEARGS += O=\$(if \$(patsubst /%,,\$(makedir)),\$(CURDIR)/)\$(patsubst %/,%,\$(makedir))

MAKEFLAGS += --no-print-directory

makegoals0 := \$(filter-out images,\$(MAKECMDGOALS))
makegoals1 := \$(filter-out install,\$(makegoals0))
all := \$(filter-out Makefile,\$(makegoals1))

.PHONY: _all \$(makegoals1) images install

_all:
	test -d images || mkdir images
	test -r images/rootfs.cpio || touch images/rootfs.cpio
	umask 0022 && \$(MAKE) \$(MAKEARGS) \$(all)

images: _all
	$1/bin/build_rootfs_images.sh ${arch}

install: _all
	test -d \$(DESTDIR) || mkdir -p \$(DESTDIR)
	cp -a images/* \$(DESTDIR)
	@echo ""
	@echo "Images have been copied to \$(DESTDIR)"
	@echo ""

Makefile:;

\$(all): _all
	@:

%/: _all
	@:
EOF
